<body></body>
<script>
const baseIp = "192.168.68"; // Default base IP
document.body.innerHTML = `
  <input id="ip" value="${baseIp}" size="15">
  <button onclick="scan()">Scan</button>
  <div id="res">Results...</div>
  <textarea id="fullResults" rows="10" cols="50" readonly></textarea>
`;

async function scan() {
  document.getElementById("res").innerHTML = "Scanning..."; 
  document.getElementById("fullResults").value = "Scanning...";

  const ips = Array.from({ length: 255 }, (_, i) => `${document.getElementById("ip").value}.${i + 1}`);
  const timeout = 1000; // 1 seconds timeout

  const results = await Promise.all(ips.map(async (ip) => {
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), timeout);

    try {
      await fetch(`http://${ip}`, { mode: 'no-cors', method: 'HEAD', signal: controller.signal });
      return `[+] <a href="http://${ip}" target="_blank">${ip}</a>`; // Clickable link
    } catch (error) {
      return `[-] ${ip} ? Error: ${error.name} - ${error.message} `; // Log name, message
    } finally {
      clearTimeout(timeoutId);
    }
  }));

  // Display results in HTML and textarea
  const openIps = results.filter(r => r.startsWith("[+]")).join("<br>") || "No open IPs found";
  document.getElementById("res").innerHTML = openIps;
  document.getElementById("fullResults").value = results.join("\n"); // Show all results
}
</script>
