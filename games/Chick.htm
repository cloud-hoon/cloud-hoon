<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mic-Controlled Chicken Jump</title>
    <style>
        body { text-align: center; overflow: hidden; margin: 0; }
        canvas { background: skyblue; display: block; margin: auto; }
    </style>
</head>
<body>
    <h1>V3</h1>
    <p>Speak louder to jump higher and farther!</p>
    <canvas id="gameCanvas"></canvas>
    <script>
        const canvas = document.getElementById("gameCanvas");
        const ctx = canvas.getContext("2d");
        canvas.width = 800;
        canvas.height = 400;

        let chicken = { x: 50, y: 300, vy: 0, vx: 0, gravity: 0.6, jumping: false };
        let scrollOffset = 0;
        let obstacles = [];
        let volumeDuration = 0;
        let wasLoud = false;

        function createObstacles() {
            for (let i = 1; i <= 10; i++) {
                let height = Math.random() * 50 + 20;
                let y = 350 - height;
                obstacles.push({ x: i * 300, y: y, width: 50, height: height });
            }
        }
        createObstacles();

        function drawChicken() {
            ctx.fillStyle = "yellow";
            ctx.fillRect(chicken.x - scrollOffset, chicken.y, 30, 30);
        }

        function drawObstacles() {
            ctx.fillStyle = "brown";
            obstacles.forEach(obstacle => {
                ctx.fillRect(obstacle.x - scrollOffset, obstacle.y, obstacle.width, obstacle.height);
            });
        }

        function update() {
            chicken.vy += chicken.gravity;
            chicken.y += chicken.vy;
            chicken.x += chicken.vx;
            chicken.vx *= 0.9;
            
            if (chicken.y >= 300) {
                chicken.y = 300;
                chicken.jumping = false;
            }
            
            scrollOffset = Math.max(0, chicken.x - 100);
        }

        function gameLoop() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawObstacles();
            drawChicken();
            update();
            requestAnimationFrame(gameLoop);
        }

        async function getMicrophoneInput() {
            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
            const audioContext = new (window.AudioContext || window.webkitAudioContext)();
            const analyser = audioContext.createAnalyser();
            const microphone = audioContext.createMediaStreamSource(stream);
            microphone.connect(analyser);
            analyser.fftSize = 256;
            const dataArray = new Uint8Array(analyser.frequencyBinCount);

            function analyzeAudio() {
                analyser.getByteFrequencyData(dataArray);
                let volume = dataArray.reduce((a, b) => a + b, 0) / dataArray.length;
                
                if (volume > 50) {
                    wasLoud = true;
                    volumeDuration += 1;
                } else if (wasLoud) {
                    wasLoud = false;
                    if (!chicken.jumping) {
                        let jumpStrength = Math.min(volumeDuration / 5, 20);
                        chicken.vy = -jumpStrength;
                        chicken.vx = jumpStrength / 1.5;
                        chicken.jumping = true;
                        volumeDuration = 0;
                    }
                }
                requestAnimationFrame(analyzeAudio);
            }
            analyzeAudio();
        }

        getMicrophoneInput();
        gameLoop();
    </script>
</body>
</html>
